---
# tasks file for kms-vault-unseal

- name: Get the current caller identity information
  aws_caller_info:
  register: aws_caller_user

- name: Set user arn fact
  set_fact:
    user_caller_arn: "{{ aws_caller_user.arn }}"

- debug:
    msg: "{{ aws_caller_user }}"

- name: Create a role with description
  iam_role:
    name: "kms_admin_iam_user_role"
    assume_role_policy_document: "{{ lookup('file','kms_admin_iam_user_policy.json') }}"
    description: kms administrator user role

- name: Create kms_iam_user_policy
  iam_policy:
    iam_type: user
    iam_name: "{{ user_caller_arn.split('/')[-1] }}"
    policy_name: "kms_iam_user_policy"
    state: present
    policy_json: " {{ lookup( 'file', 'kms_iam_user_policy.json') }} "

- name: Create a new KMS vault_unseal key
  aws_kms:
    alias: vault_unseal_key
    #policy: "{{ playbook_dir }}/roles/kms_vault_unseal_key/files/kms_iam_user_policy.json }}"
    #policy: "kms_iam_user_policy"
    #grants:
      #- name: "{{ aws_caller_user.arn.split('/')[-1] }}"
        #grantee_principal: "{{ aws_caller_user.arn }}"
        ##operations:
          #- "Decrypt"
          #- "Encrypt"
          #- "GenerateDataKey"
          #- "ReEncrypt*"
          #- "DescribeKey"
    tags:
      Purpose: kms_vault_unseal
  register: kms_vault_unseal
#

- name: Replace a localhost entry with our own
  lineinfile:
    path: "{{ playbook_dir }}/roles/vault-cluster/files/vault-values-on-kubernetes.yml"
    regexp: '^(.*kms_key_id\s=\s)(.*)$'
    line: '        kms_key_id = "{{ kms_vault_unseal.key_id }}"'

