---
- name: Get eks workers role arn
  shell: "kubectl -n kube-system get configmap aws-auth -o yaml|grep 'rolearn.*kubernetes'|awk '{print $2}'"
  register: worker_role_arn

- name: Get AWS account id
  shell: "aws sts get-caller-identity|jq '.Account'| sed 's/\"//g'"
  register: aws_account_id
  
- name: update eks_worker_role_arn variable with current worker role arn
  lineinfile:
    regexp: "^eks_worker_role_arn"
    line: "eks_worker_role_arn = {{ (worker_role_arn.stdout_lines)[0] }}"
    path: "{{ playbook_dir }}/../terraform/aws/haproxy-autoscale/terraform.tfvars"
  
- name: update haproxy_role_arn variable with current haproxy role arn
  lineinfile:
    regexp: "^haproxy_role_arn"
    line: "haproxy_role_arn = \"arn:aws:iam::{{ (aws_account_id.stdout_lines)[0] }}:role/haproxy_ec2_role\""
    #line: "haproxy_role_arn = \"arn:aws:iam::{{ ((worker_role_arn.stdout_lines)[0].split(':'))[4] }}:role/haproxy_ec2_role\""
    path: "{{ playbook_dir }}/../terraform/aws/haproxy-autoscale/terraform.tfvars"

- name: Create haproxy_lb
  terraform:
    binary_path: "/home/{{ lookup('env','USER') }}/bin/terraform"
    project_path: "{{ haproxy_lb_terraform_dir }}"
    state:        present 
    lock: yes
    backend_config:
      region: "us-east-1"
      bucket: "devopsitall-terraform-remote-state"
      key: "haproxy-lb-terraform.tfstate"
      dynamodb_table:  "devopsitall-haproxy-autoscale-terraform-remote-lock"
      encrypt:  "true"
    force_init: true
  register: terraform_run
